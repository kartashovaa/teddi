plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.0"
    id "java-gradle-plugin"
    id "maven-publish"
    id "signing"
}

group = "io.github.kartashovaa"
version = "0.0.1"

def integrationSourceSet = sourceSets.create("integrationTest")
tasks.register("testIntegrationTest", Test) {
    testClassesDirs = integrationSourceSet.output
    classpath = integrationSourceSet.runtimeClasspath
    dependsOn(tasks.named("publishToMavenLocal"))
}

gradlePlugin {
    plugins {
        testDiff {
            id = "me.kyd3snik.teddi"
            implementationClass = "me.kyd3snik.test.diff.TestDiffPlugin"
        }
    }

    testSourceSet(integrationSourceSet)
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    compileOnly 'com.android.tools.build:gradle:7.4.0'
    implementation 'org.ow2.asm:asm:9.5'

    testImplementation "junit:junit:4.13.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.1"
    integrationTestImplementation "junit:junit:4.13.2"
    integrationTestRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.1"
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(11)
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            name = "MavenCentral"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
    publications {
        teddi(MavenPublication) {
            from components.java
        }
    }
}

signing {
    sign publishing.publications.teddi
}
